more_set_headers "server: google-cloud";
server_tokens off;
add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com ; img-src 'self' https://ssl.google-analytics.com ; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://fonts.gstatic.com; font-src 'self' https://themes.googleusercontent.com; object-src 'none'";

upstream api-service {
  server api-service:80;
}

server {

  listen 80;
  # listen 443 ssl;
  server_name api-service;



  location ~* api/(.*) {
    proxy_pass http://api-service;
    proxy_redirect off;
    #proxy_http_version 1.1; # CDN change it to version 2
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection keep-alive;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_intercept_errors off; # bypass upper exception middleware
  }

  location / {
    root /usr/share/nginx/html;
    gzip_static on;
    try_files $uri @index;
  }

  location @index {
    add_header Cache-Control no-cache;
    expires 0;
    try_files /index.html =404;
  }

  include ./conf.d/api_json_errors.cfg; # API client friendly JSON error responses
  error_page 405 /index.html;
}
# vim /etc/nginx/conf.d/config.conf
# service nginx reload
# nginx -t
